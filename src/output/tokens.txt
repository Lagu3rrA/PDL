<reservedWord,let>
<reservedWord,number>
<ID,0>
<separator,semicolon>
<reservedWord,let>
<reservedWord,number>
<ID,0>
<separator,semicolon>
<reservedWord,let>
<reservedWord,boolean>
<ID,0>
<separator,semicolon>
<reservedWord,let>
<reservedWord,boolean>
<ID,0>
<separator,semicolon>
<ID,0>
<asigOp,equal>
<wholeConst,3>
<separator,semicolon>
<reservedWord,alert>
<separator,openPar>
<ID,0>
<aritOp,plus>
<wholeConst,1>
<separator,closePar>
<separator,semicolon>
<ID,0>
<asigOp,equal>
<ID,0>
<aritOp,plus>
<ID,0>
<separator,semicolon>
<reservedWord,input>
<separator,openPar>
<ID,0>
<separator,closePar>
<separator,semicolon>
<reservedWord,input>
<separator,openPar>
<ID,0>
<separator,closePar>
<separator,semicolon>
<ID,0>
<asigOp,equal>
<ID,0>
<separator,semicolon>
<ID,0>
<asigOp,equal>
<reservedWord,true>
<separator,semicolon>
<ID,0>
<asigOp,equal>
<ID,0>
<relOp,equals>
<ID,0>
<separator,semicolon>
<reservedWord,if>
<separator,openPar>
<ID,0>
<relOp,equals>
<ID,0>
<separator,closePar>
<ID,0>
<asigOp,equal>
<wholeConst,1>
<separator,semicolon>
<reservedWord,do>
<separator,openBraq>
<reservedWord,let>
<reservedWord,number>
<ID,0>
<separator,semicolon>
<ID,0>
<asigOp,equal>
<wholeConst,3>
<separator,semicolon>
<separator,closeBraq>
<reservedWord,while>
<separator,openPar>
<ID,0>
<relOp,equals>
<ID,0>
<separator,closePar>
<separator,semicolon>
<reservedWord,let>
<reservedWord,number>
<ID,0>
<separator,semicolon>
<ID,0>
<asigOp,equal>
<ID,0>
<aritOp,plus>
<ID,0>
<separator,semicolon>
<ID,0>
<asigOp,equal>
<ID,0>
<autoIncOp,autoInc>
<separator,semicolon>
<reservedWord,function>
<ID,0>
<separator,openPar>
<reservedWord,number>
<ID,0>
<separator,colon>
<reservedWord,number>
<ID,0>
<separator,closePar>
<separator,openBraq>
<reservedWord,let>
<reservedWord,boolean>
<ID,0>
<separator,semicolon>
<separator,closeBraq>
<reservedWord,function>
<reservedWord,boolean>
<ID,0>
<separator,openPar>
<reservedWord,boolean>
<ID,0>
<separator,colon>
<reservedWord,number>
<ID,0>
<separator,closePar>
<separator,openBraq>
<reservedWord,let>
<reservedWord,string>
<ID,0>
<separator,semicolon>
<reservedWord,return>
<ID,0>
<separator,semicolon>
<separator,closeBraq>
<reservedWord,if>
<separator,openPar>
<ID,0>
<relOp,equals>
<ID,0>
<separator,closePar>
<ID,0>
<asigOp,equal>
<wholeConst,0>
<separator,semicolon>
<ID,0>
<asigOp,equal>
<ID,0>
<relOp,equals>
<ID,0>
<separator,semicolon>
<ID,0>
<asigOp,equal>
<wholeConst,2>
<relOp,equals>
<wholeConst,1>
<separator,semicolon>
<reservedWord,let>
<reservedWord,number>
<ID,0>
<separator,semicolon>
